* Redex = Expressões Redutivas *

>> Avaliação mais interna(innermost)(call-by-valve)

mult(1+2, 2+3)
mult(3, 2+3)
mult(3,5)
3 * 5
15


>> Avaliação mais externa(outmost)(call-by-name)

mult(1+2, 2+3)
(1+2) * (2+3)
3 * (2 + 3)
3 * 5
15

inf :: Int
inf = 1 + inf

fstt :: (a,a) -> a
fstt (x,y) = x

-- square(1 + 2)
-- square 3
-- 3 * 3
-- 9

-- square(1 + 2)
-- (1+2) * (1+2)
-- 3 * (1 + 2)
-- 3 * 3
-- 9


>> Avaliação Preguisosa 

-- outmost + sharing

>>> Hutton 15.2 -> Lambdas Expression
           15.6 -> Lazy Programming
           15.9 -> Exer 1,2,3
            

ones :: [Int]
ones = 1:ones
head ones ( preguiçosa )
1 

square :: Int -> Int
square n = n * n

square $! (1+2)
square $! 3
square 3
3 * 3
9












